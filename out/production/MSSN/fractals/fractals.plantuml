@startuml

title __FRACTALS's Class Diagram__\n

  namespace fractals {
    class fractals.ForestApp {
        - angle : float
        - axiom : String
        - forest : List<Tree>
        - niter : int
        - rules : Rule[]
        - viewport : float[]
        - window : double[]
        + draw()
        + keyPressed()
        + mouseDragged()
        + mousePressed()
        + mouseReleased()
        + setup()
    }
  }
  

  namespace fractals {
    class fractals.FruitTreeApp {
        - startingPosition : PVector
        - viewport : float[]
        - window : double[]
        + draw()
        + keyPressed()
        + mouseDragged()
        + mousePressed()
        + setup()
    }
  }
  

  namespace fractals {
    class fractals.LSystem {
        - generation : int
        - ruleset : Rule[]
        - sequence : String
        + LSystem()
        + getGeneration()
        + getSequence()
        + nextGeneration()
    }
  }
  

  namespace fractals {
    class fractals.LSystemApp {
        - startingPosition : PVector
        - viewport : float[]
        - window : double[]
        + draw()
        + keyPressed()
        + mouseDragged()
        + mousePressed()
        + setup()
    }
  }
  

  namespace fractals {
    class fractals.Rule {
        - string : String
        - symbol : char
        + Rule()
        + getString()
        + getSymbol()
    }
  }
  

  namespace fractals {
    class fractals.Tree {
        - growthRate : float
        - intervalBetweenSeasons : float
        - length : float
        - nextSeasonTime : float
        - now : float
        - numberOfSeasonsToGrow : int
        - p : PApplet
        - position : PVector
        - scalingFactor : float
        + Tree()
        + display()
        + grow()
    }
  }
  

  namespace fractals {
    class fractals.Turtle {
        - angle : float
        - len : float
        + Turtle()
        + getLength()
        + render()
        + scaling()
        + setLength()
        + setPose()
    }
  }
  

  namespace fractals {
    class fractals.TurtleFruit {
        - angle : float
        - len : float
        + TurtleFruit()
        + getLength()
        + render()
        + scaling()
        + setLength()
        + setPose()
    }
  }
  

  fractals.ForestApp .up.|> fractals.Mandelbrot.IProcessingApp
  fractals.ForestApp o-- tools.SubPlot : plt
  fractals.FruitTreeApp .up.|> setup.IProcessingApp
  fractals.FruitTreeApp o-- fractals.LSystem : lsys
  fractals.FruitTreeApp o-- tools.SubPlot : plt
  fractals.FruitTreeApp o-- fractals.Turtle : turtle
  fractals.LSystemApp .up.|> setup.IProcessingApp
  fractals.LSystemApp o-- fractals.LSystem : lsys
  fractals.LSystemApp o-- tools.SubPlot : plt
  fractals.LSystemApp o-- fractals.Turtle : turtle
  fractals.Tree o-- fractals.LSystem : lsys
  fractals.Tree o-- fractals.Turtle : turtle


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
